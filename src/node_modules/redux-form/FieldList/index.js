import React from 'react'
import PropTypes from 'prop-types'

/**
 * Компонент списка
 *
 * Принимает один дочерний компонент и использует его
 * в качестве шаблона элемента списка
 *
 * @param {Object}        fields        Параметры полей списка. Из redux-form
 * @param {Object}        meta          Метаданные полей списка. Из redux-form
 * @param {Function}      onRemove      Функция, вызываемая при удалении
 *                                      элемента. В качестве параметров
 *                                      принимает id элемента
 * @param {React.Element} buttonElement Элемент кнопки "Добавить"
 */
const FieldList = ({
  fields,
  meta,
  onRemove,
  buttonElement = <button>Add</button>,
  children,
  ...props
}) => {
  return (
    <div {...props}>
      {
        fields.map(
          (member, index) => (
            React.cloneElement(
              React.Children.only(children),
              {
                key: index,
                member,
                onRemove: id => {
                  fields.remove(index)
                  typeof onRemove === 'function' &&
                  id &&
                  onRemove(id)
                }
              }
            )
          )
        )
      }
      {
        React.cloneElement(
          buttonElement,
          {
            onClick: evt => {
              evt.preventDefault()
              fields.push({})
            }
          }
        )
      }
    </div>
  )
}

FieldList.propTypes = {
  fields: PropTypes.object.isRequired,
  meta: PropTypes.object,
  onRemove: PropTypes.func,
  buttonElement: PropTypes.element,
  children: PropTypes.element.isRequired
}

export default FieldList
